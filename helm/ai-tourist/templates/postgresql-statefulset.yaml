{{- if .Values.postgresql.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ai-tourist.fullname" . }}-postgresql
  labels:
    app: postgresql
    {{- include "ai-tourist.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "ai-tourist.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image }}
        ports:
        - containerPort: {{ .Values.postgresql.port }}
          name: postgresql
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ai-tourist.fullname" . }}-secrets
              key: DB_PASSWORD
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.username }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.username }}
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ai-tourist.fullname" . }}-postgresql
  labels:
    app: postgresql
    {{- include "ai-tourist.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.postgresql.port }}
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
{{- end }}