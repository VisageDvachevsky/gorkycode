apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.poiService.name }}
  labels:
    app: {{ .Values.poiService.name }}
    {{- include "ai-tourist.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.poiService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.poiService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.poiService.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.poiService.metricsPort }}"
    spec:
      containers:
      - name: poi-service
        image: "{{ .Values.poiService.image }}:{{ .Values.poiService.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: grpc
          containerPort: {{ .Values.poiService.port }}
        - name: metrics
          containerPort: {{ .Values.poiService.metricsPort }}
        envFrom:
        - configMapRef:
            name: {{ include "ai-tourist.fullname" . }}-config
        - secretRef:
            name: {{ include "ai-tourist.fullname" . }}-secrets
        resources:
          {{- toYaml .Values.poiService.resources | nindent 12 }}
        livenessProbe:
          tcpSocket:
            port: grpc
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: grpc
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.poiService.name }}
  labels:
    app: {{ .Values.poiService.name }}
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.poiService.port }}
    targetPort: grpc
    protocol: TCP
    name: grpc
  - port: {{ .Values.poiService.metricsPort }}
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: {{ .Values.poiService.name }}
