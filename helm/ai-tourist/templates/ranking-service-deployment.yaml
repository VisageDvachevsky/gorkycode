apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-tourist.fullname" . }}-ranking-service
  labels:
    app: {{ .Values.rankingService.name }}
    {{- include "ai-tourist.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.rankingService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rankingService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.rankingService.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.rankingService.metricsPort }}"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ranking-service
        image: "{{ .Values.rankingService.image.repository }}:{{ .Values.rankingService.image.tag }}"
        imagePullPolicy: {{ .Values.rankingService.image.pullPolicy }}
        ports:
        - name: grpc
          containerPort: {{ .Values.rankingService.service.port }}
        - name: metrics
          containerPort: {{ .Values.rankingService.metricsPort }}
        env:
        - name: GRPC_PORT
          value: "{{ .Values.rankingService.service.port }}"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "ai-tourist.fullname" . }}-secrets
              key: DATABASE_URL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ai-tourist.fullname" . }}-config
              key: ENVIRONMENT
        resources:
          {{- toYaml .Values.rankingService.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: metrics
          initialDelaySeconds: 10
          periodSeconds: 5
