apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-tourist.fullname" . }}-geocoding-service
  labels:
    app: {{ .Values.geocodingService.name }}
    {{- include "ai-tourist.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.geocodingService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.geocodingService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.geocodingService.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.geocodingService.metricsPort }}"
    spec:
      containers:
      - name: geocoding-service
        image: "{{ .Values.geocodingService.image.repository }}:{{ .Values.geocodingService.image.tag }}"
        imagePullPolicy: {{ .Values.geocodingService.image.pullPolicy }}
        ports:
        - name: grpc
          containerPort: {{ .Values.geocodingService.service.port }}
        - name: metrics
          containerPort: {{ .Values.geocodingService.metricsPort }}
        env:
        - name: GRPC_PORT
          value: "{{ .Values.geocodingService.service.port }}"
        - name: TWOGIS_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "ai-tourist.fullname" . }}-secrets
              key: TWOGIS_API_KEY
              optional: true
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ include "ai-tourist.fullname" . }}-config
              key: ENVIRONMENT
        resources:
          {{- toYaml .Values.geocodingService.resources | nindent 12 }}
        livenessProbe:
          tcpSocket:
            port: grpc
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: grpc
          initialDelaySeconds: 10
          periodSeconds: 5
